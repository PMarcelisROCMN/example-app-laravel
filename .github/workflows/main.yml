on:
  push:
    branches: main

name: ðŸš€ Deploy Laravel project on push!

jobs:
  laravel-deploy:
    name: ðŸŽ‰ Deploy Laravel Project
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code from the repository
      - name: ðŸšš Get latest code
        uses: actions/checkout@v4

      # Step 2: Cache Composer dependencies
      - name: ðŸŽ¯ Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-

      # Step 3: Set up PHP with Composer
      - name: ðŸ”§ Set up PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'  # You can adjust the PHP version as per your project requirements
          extensions: mbstring, xml, intl
          coverage: none

      # Step 4: Install Composer dependencies
      - name: ðŸ“¦ Install Composer dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      # Step 5: Cache Node.js modules
      - name: ðŸŽ¯ Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-

      # Step 6: Set up Node.js environment
      - name: ðŸ”§ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'  # Adjust the Node.js version as required

      # Step 7: Install Node.js dependencies
      - name: ðŸ“¦ Install Node.js dependencies
        run: npm install --production

      # Step 9: Upload files to the server using FTP
      - name: ðŸ“‚ Sync files to server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTPUSERNAME }}
          password: ${{ secrets.FTPPASSWORD }}
          local-dir: ./  # Sync the root directory (excluding paths below)
          server-dir: /test/  # Change this to the path on your FTP server
          exclude: |
            vendor/**  # Recursively exclude vendor directory
            node_modules/**  # Recursively exclude node_modules directory
            .git/**  # Recursively exclude .git directory
            .env
            .ftpignore
          method: sync  # Will delete files that don't exist in the current version


      # Step 10: Run Laravel cache and maintenance tasks
      - name: ðŸ§¹ Run Laravel maintenance tasks
        run: |
          php artisan cache:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
        env:
          APP_ENV: production  # Ensure your environment variables are set for production
